// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  password String
}

model CustomerGroup {
  code        String   @id @map("_id") @db.String
  name        String
  description String
  createDate  DateTime @default(now())

  factories Factory[]
}

type CustomerPic {
  name        String
  email       String
  phoneNumber String
  telephone   String
  fax         String
}

model Factory {
  code              String            @id @map("_id") @db.String
  name              String
  group             CustomerGroup     @relation(fields: [groupCode], references: [code], onDelete: Restrict)
  groupCode         String            @db.String
  address           String
  province          String
  city              String
  telephone         String
  fax               String
  email             String
  top               Int
  currency          String
  purchasing        CustomerPic
  operation         CustomerPic
  finance           CustomerPic
  createDate        DateTime          @default(now())
  status            Boolean           @default(true)
  quotations        Quotation[]
  quotationDetails  QuotationDetail[]
  factoryInquiries  Inquiry[]         @relation("factory")
  purchaseInquiries Inquiry[]         @relation("purchase")
  inquiryDetails    InquiryDetail[]
}

model Vendor {
  code               String                          @id @map("_id") @db.String
  name               String
  address            String
  province           String
  city               String
  telephone          String
  fax                String
  email              String
  top                Int
  currency           String
  purchasing         CustomerPic
  operation          CustomerPic
  finance            CustomerPic
  createDate         DateTime                        @default(now())
  status             Boolean                         @default(true)
  priceVendors       PriceVendor[]
  vehicles           Vehicle[]
  uangJalan          UangJalan[]
  trackingAsal       QuotationDetailTrackingAsal[]
  trackingTujuan     QuotationDetailTrackingTujuan[]
  consigneeJobOrders JobOrderConfirmation[]          @relation("consignee")
  vendorJobOrders    JobOrderConfirmation[]          @relation("vendor")
}

model Shipping {
  code            String                          @id @map("_id") @db.String
  name            String
  address         String
  province        String
  city            String
  telephone       String
  fax             String
  email           String
  top             Int
  currency        String
  purchasing      CustomerPic
  operation       CustomerPic
  finance         CustomerPic
  createDate      DateTime                        @default(now())
  status          Boolean                         @default(true)
  priceShippings  PriceShipping[]
  vessels         Vessel[]
  shippingDetails QuotationDetailShippingDetail[]
  inquiryDetails  InquiryDetail[]
}

model Route {
  code                  String                          @id @map("_id") @db.String
  province              String
  city                  String
  startDescription      String
  endDescription        String
  effectiveStartDate    DateTime
  effectiveEndDate      DateTime
  createDate            DateTime                        @default(now())
  priceVendorDetails    PriceVendorDetail[]
  priceShippingDetails  PriceShippingDetail[]
  uangJalan             UangJalan[]
  quotationDetails      QuotationDetail[]
  trackingAsal          QuotationDetailTrackingAsal[]
  trackingTujuan        QuotationDetailTrackingTujuan[]
  shippingDetails       QuotationDetailShippingDetail[]
  jobOrderConfirmations JobOrderConfirmation[]
}

model Port {
  code                 String                @id @map("_id") @db.String
  province             String
  city                 String
  name                 String
  createDate           DateTime              @default(now())
  priceVendorDetails   PriceVendorDetail[]
  priceShippingDetails PriceShippingDetail[]
  quotationDetails     QuotationDetail[]
}

model Sales {
  code        String           @id @map("_id") @db.String
  jobPosition SalesJobPosition
  name        String
  nik         String
  area        String
  phoneNumber String
  telephone   String
  fax         String
  email       String
  status      Boolean          @default(true)
  createDate  DateTime         @default(now())
  quotations  Quotation[]
  inquiries   Inquiry[]
}

enum SalesJobPosition {
  Marketing
  Direktur
}

model Vehicle {
  id            String                 @id @default(auto()) @map("_id") @db.ObjectId
  vendor        Vendor                 @relation(fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode    String                 @db.String
  truckNumber   String                 @unique
  brand         String
  type          String
  machineNumber String
  frameNumber   String
  cylinder      Int
  color         String
  stnkExpired   DateTime
  taxExpired    DateTime
  keurExpired   DateTime
  createDate    DateTime               @default(now())
  status        Boolean                @default(true)
  jobOrders     JobOrderConfirmation[]
}

model Vessel {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  shipping       Shipping        @relation(fields: [shippingCode], references: [code], onDelete: Restrict)
  shippingCode   String          @db.String
  name           String
  unit           String
  capacity       Int
  createDate     DateTime        @default(now())
  status         Boolean         @default(true)
  inquiryDetails InquiryDetail[]
}

model UangJalan {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  vendor        Vendor   @relation(fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode    String   @db.String
  route         Route    @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode     String   @db.String
  truckType     String
  containerSize String
  bbm           Int
  toll          Int
  labourCost    Int
  meal          Int
  etc           Int
  total         Int
  createDate    DateTime @default(now())
}

model PriceFactory {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  quotationDetail   QuotationDetail @relation(fields: [quotationDetailID], references: [id], onDelete: Cascade)
  quotationDetailID String          @db.ObjectId
  etcCost           Int
  createDate        DateTime        @default(now())
  status            Boolean         @default(true)
  inquiryDetails    InquiryDetail[]
}

model PriceVendorDetail {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  priceVendor   PriceVendor @relation(fields: [priceVendorId], references: [id], onDelete: Cascade)
  priceVendorId String      @db.ObjectId
  route         Route       @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode     String      @db.String
  containerSize String
  containerType String
  serviceType   String
  port          Port        @relation(fields: [portCode], references: [code], onDelete: Restrict)
  portCode      String      @db.String
  tracking      Int
  buruh         Int
  thcOPT        Int
  thcOPP        Int
  adminBL       Int
  cleaning      Int
  materai       Int
}

model PriceVendor {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  vendor             Vendor              @relation(fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode         String              @db.String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  details            PriceVendorDetail[]
  createDate         DateTime            @default(now())
  status             Boolean             @default(true)
}

model PriceShippingDetail {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  priceShipping   PriceShipping @relation(fields: [priceShippingId], references: [id], onDelete: Cascade)
  priceShippingId String        @db.ObjectId
  route           Route         @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode       String        @db.String
  containerSize   String
  containerType   String
  serviceType     String
  port            Port          @relation(fields: [portCode], references: [code], onDelete: Restrict)
  portCode        String        @db.String
  freight         Int
  thcOPT          Int
  thcOPP          Int
  adminBL         Int
  cleaning        Int
  alihKapal       Int
  materai         Int
  lolo            Int
  segel           Int
  rc              Int
  lss             Int
}

model PriceShipping {
  id                 String                @id @default(auto()) @map("_id") @db.ObjectId
  shipping           Shipping              @relation(fields: [shippingCode], references: [code], onDelete: Restrict)
  shippingCode       String                @db.String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  details            PriceShippingDetail[]
  createDate         DateTime              @default(now())
  status             Boolean               @default(true)
}

model ProductCategory {
  reff       String    @id @map("_id") @db.String
  name       String
  createDate DateTime  @default(now())
  products   Product[]
}

enum ProductType {
  Product
  Sparepart
  ATK
}

model Product {
  skuCode             String           @id @map("_id") @db.String
  type                ProductType
  productCategory     ProductCategory? @relation(fields: [productCategoryReff], references: [reff], onDelete: Restrict)
  productCategoryReff String?          @db.String
  name                String
  unit                String
  createDate          DateTime         @default(now())
}

model MainCOA {
  number      Int       @id @map("_id")
  accountName String
  accountType String    @map("type")
  category    String
  transaction String
  currency    String
  status      Boolean   @default(true)
  createDate  DateTime  @default(now())
  subs        Sub1COA[]
}

type Sub1COA {
  description String
  status      Boolean   @default(true)
  subs        Sub2COA[]
}

type Sub2COA {
  description String
  status      Boolean @default(true)
}

model Quotation {
  number             String            @id @map("_id") @db.String
  serviceType        String
  sales              Sales             @relation(fields: [salesCode], references: [code], onDelete: Restrict)
  salesCode          String            @db.String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  factory            Factory           @relation(fields: [factoryCode], references: [code], onDelete: Restrict)
  factoryCode        String            @db.String
  details            QuotationDetail[]
  createDate         DateTime          @default(now())
}

model QuotationDetail {
  id              String                         @id @default(auto()) @map("_id") @db.ObjectId
  quotation       Quotation                      @relation(fields: [quotationNumber], references: [number], onDelete: Cascade)
  quotationNumber String                         @map("quotationID") @db.String
  route           Route                          @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode       String                         @db.String
  factory         Factory                        @relation(fields: [factoryCode], references: [code], onDelete: Restrict)
  factoryCode     String                         @db.String
  port            Port                           @relation(fields: [portCode], references: [code], onDelete: Restrict)
  portCode        String                         @db.String
  containerSize   String
  containerType   String
  trackingAsal    QuotationDetailTrackingAsal?
  trackingTujuan  QuotationDetailTrackingTujuan?
  shippingDetail  QuotationDetailShippingDetail?
  otherExpanses   QuotationDetailOtherExpanses?
  summaryDetail   QuotationDetailSummaryDetail?
  completed       Boolean                        @default(false)
  priceFactories  PriceFactory[]
}

model QuotationDetailTrackingAsal {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  quotationDetail   QuotationDetail @relation(fields: [quotationDetailID], references: [id], onDelete: Cascade)
  quotationDetailID String          @unique @db.ObjectId
  vendor            Vendor          @relation(fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode        String          @db.String
  route             Route           @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode         String          @db.String
}

model QuotationDetailTrackingTujuan {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  quotationDetail   QuotationDetail @relation(fields: [quotationDetailID], references: [id], onDelete: Cascade)
  quotationDetailID String          @unique @db.ObjectId
  vendor            Vendor          @relation(fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode        String          @db.String
  route             Route           @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode         String          @db.String
}

model QuotationDetailShippingDetail {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  quotationDetail   QuotationDetail @relation(fields: [quotationDetailID], references: [id], onDelete: Cascade)
  quotationDetailID String          @unique @db.ObjectId
  shipping          Shipping        @relation(fields: [shippingCode], references: [code], onDelete: Restrict)
  shippingCode      String          @db.String
  route             Route           @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode         String          @db.String
}

type QuotationDetailOtherExpanses {
  adminBL       Int
  cleaning      Int
  alihKapal     Int
  materai       Int
  biayaBuruh    Int
  stuffingDalam Int
  stuffingLuar  Int
  biayaCetakRC  Int
  biayaCetakIR  Int
}

enum QuotationDetailSummaryDetailStatus {
  Include
  Exclude
  TidakAda
}

type QuotationDetailSummaryDetail {
  ppftz          QuotationDetailSummaryDetailStatus
  nilaiPPFTZ     Int
  insurance      QuotationDetailSummaryDetailStatus
  nilaiInsurance Int
  biayaAdmin     Int
  ppn            QuotationDetailSummaryDetailStatus
  hargaJual      Int
}

enum JobOrder {
  Domestic
  International
}

enum TypeOrder {
  Muat
  Bongkaran
}

model Inquiry {
  number       String          @id @map("_id") @db.String
  sales        Sales           @relation(fields: [salesCode], references: [code], onDelete: Restrict)
  salesCode    String          @db.String
  factory      Factory         @relation("factory", fields: [factoryCode], references: [code], onDelete: Restrict)
  factoryCode  String          @db.String
  purchase     Factory         @relation("purchase", fields: [purchaseCode], references: [code], onDelete: Restrict)
  purchaseCode String          @map("purchaseCode") @db.String
  details      InquiryDetail[]
  createDate   DateTime        @default(now())
}

model InquiryDetail {
  id             String                @id @default(auto()) @map("_id") @db.ObjectId
  inquiry        Inquiry               @relation(fields: [inquiryNumber], references: [number], onDelete: Cascade)
  inquiryNumber  String                @db.String
  jobOrder       JobOrder
  typeOrder      TypeOrder
  loadDate       DateTime
  factory        Factory               @relation(fields: [factoryCode], references: [code], onDelete: Restrict)
  factoryCode    String                @db.String
  priceFactory   PriceFactory          @relation(fields: [priceFactoryID], references: [id], onDelete: Restrict)
  priceFactoryID String                @db.ObjectId
  shipping       Shipping              @relation(fields: [shippingCode], references: [code], onDelete: Restrict)
  shippingCode   String                @db.String
  vessel         Vessel                @relation(fields: [vesselID], references: [id], onDelete: Restrict)
  vesselID       String                @db.ObjectId
  voyage         String
  etd            DateTime
  eta            DateTime
  confirmation   JobOrderConfirmation?
}

model JobOrderConfirmation {
  number            String        @id @map("_id") @db.String
  inquiryDetail     InquiryDetail @relation(fields: [inquiryDetailID], references: [id], onDelete: Restrict)
  inquiryDetailID   String        @unique @db.ObjectId
  roNumber          String        @db.String
  consignee         Vendor        @relation("consignee", fields: [consigneeCode], references: [code], onDelete: Restrict)
  consigneeCode     String        @db.String
  stuffingDate      DateTime
  route             Route         @relation(fields: [routeCode], references: [code], onDelete: Restrict)
  routeCode         String        @db.String
  vendor            Vendor        @relation("vendor", fields: [vendorCode], references: [code], onDelete: Restrict)
  vendorCode        String        @db.String
  driverName        String
  driverPhoneNumber String
  vehicle           Vehicle       @relation(fields: [vehicleID], references: [id], onDelete: Restrict)
  vehicleID         String        @db.ObjectId
  containerNumber1  String
  sealNumber1       String
  containerNumber2  String?
  sealNumber2       String?
  createDate        DateTime      @default(now())
}
